#!/usr/bin/env php
<?php

use PeacefulBit\Slate\Core\Evaluator;
use PeacefulBit\Slate\Core\Frame;
use PeacefulBit\Slate\Parser\Nodes\NativeExpression;

require_once __DIR__ . '/../vendor/autoload.php';

//$calculator = new \PeacefulBit\Packet\Calculator();

//$calculator->run($argv[1]);

$tokenizer = new \PeacefulBit\Slate\Parser\Tokenizer();
$parser = new \PeacefulBit\Slate\Parser\Parser();

$code = <<<CODE
(def (iter x y)
  (if (= x y) 
      x
      (iter (+ x 1) y)))
(iter 0 500)
CODE;

/*
 * Postfix notation.
 *
 * 0 500 iter -> (iter 1 500)
 *
 */

$tokens = $tokenizer->tokenize($code);

$ast = $parser->parse($tokens);

$e = new Evaluator([
    'if' => new NativeExpression(function (Evaluator $evaluator, Frame $frame, array $arguments) {
        if (sizeof($arguments) != 3) {
            throw new \Exception('Incorrect number of arguments');
        }

        list ($test, $cons, $alt) = $arguments;

        return $test->evaluate($evaluator, $frame) ? $cons : $alt;
    })
]);

echo $e->valueOf($ast), PHP_EOL;
